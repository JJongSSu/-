sklearn → GPU를 사용할 수 없음 → 대형 프로젝트에는 적합하지 않음

Accuracy : (TP+TN) / (TP+TN+FP+FN) -> 변하지 않음
        
        confusion matrix
            Accuracy 한계 보완하기 위해 만듬
            
            Precision(정밀도) : TP/(TP+FP) -> 양성인 것 중에서 몇 개나 맞췄는지
            Recall(재현도) : TP/(TP+FN) -> 실제값이 양성인 것 중에서 몇 개나 맞췄는지
            Precision과 Recall는 반비례(FP-FN 관계)

            F1 accuracy_score   
                recall과 precision의 조화평균을 사용
                2*precision*recall / (precision + recall)
            
            specificity(특이도) : FP/(FP+TN)
            sensitivity(민감도) : TP/(TP+FN)
            -> trade off 관계
            
            ROC curve : 호의 가장 볼록한 부분에서 타겟(Y축 꼭지점)까지의 거리를 통해 설명
            AUC : 호의 면적으로 설명, 최대값 1
            점선과 같은 직선으로 나오면 머신러닝 알고리즘으로 사용할 수 없음

파이토치 : 딥러닝 프레임워크, 코딩+수학 실력자들이 사용

인공지능 → 통계적인 계산을 하기 때문에 명백한 답이 있어야 하면 사용하지 않음

애플, 구글 → 예전 아이폰이 스마트폰 시장 80%  점령 → 이 일을 계기로 삼성 안드로이드 폰이 역전 → 지금은 다시 애플이 역전...

predict - test 차이 = cost
기울기 조정하면서 weight를 찾아감
최적화 = weight를 찾아가는 과정, 적분값이 0이 되는 점을 찾는 과정

딥러닝
    학습할수록 결과가 좋아짐
    새로운 data를 계속 학습하기 때문



